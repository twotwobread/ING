package example.object.ch5.domain;

public interface DiscountPolicy {
	Money calculateMovieFee(Money fee);
}

// 변경과 유연성
//	- 예로써, 영화에 설정된 할인 정책을 실행 중에 변경할 수 있어야 한다는 요구사항이 추가됐다고 가정하자.
// 	- 만약 상속(extends)을 이용한다면 실행 중에 영화의 할인 정책을 변경하기 위해서는 새로운 인스턴스를 생성한 후 필요한 정보를 복사해야 한다.
//	- 코드 복잡성이 높아지더라도 할인 정책의 변경을 쉽게 수용할 수 있게 코드를 유연하게 만드는 것이 더 좋은 방법이다.
//	- 상속 대신 합성을 사용하는 것
//	- 사실 유연성의 정도는 요소들 간의 의존성의 정도가 결정한다.